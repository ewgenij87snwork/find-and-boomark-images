{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiKey: 'c983cb07708be57e05798dae1bf1c7cb'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\n\nimport {BreakpointObserver} from '@angular/cdk/layout';\n\nimport {MatSidenav} from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements AfterViewInit{\n  public title = 'Image Finder';\n\n  @ViewChild(MatSidenav)\n  sidenav!: MatSidenav;\n\n  constructor(private observer: BreakpointObserver) {\n  }\n\n  ngAfterViewInit(): void {\n    this.observer.observe(['(max-width: 900px)']).subscribe((res) => {\n      if (res.matches) {\n        this.sidenav.mode = 'over';\n        this.sidenav.close();\n      } else {\n        this.sidenav.mode = 'side';\n        this.sidenav.open();\n      }\n    });\n  }\n}\n","<mat-toolbar class=\"toolbar\">\n  <button\n    *ngIf=\"sidenav && sidenav.mode === 'over'\"\n    (click)=\"sidenav.toggle()\"\n    mat-icon-button>\n    <mat-icon *ngIf=\"!sidenav.opened\">\n      menu\n    </mat-icon>\n    <mat-icon *ngIf=\"sidenav.opened\">\n      close\n    </mat-icon>\n  </button>\n  Find & Bookmark Image\n</mat-toolbar>\n<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #sidenav=\"matSidenav\"\n    class=\"mat-elevation-z8\">\n    <div class=\"sidenav__buttons\">\n      <button\n        routerLink=\"/\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        mat-button>\n        <mat-icon\n          class=\"sidenav__button\"\n          aria-hidden=\"false\"\n          aria-label=\"Search Page\">\n          cloud\n        </mat-icon>\n      </button>\n      <button\n        routerLink=\"/bookmarks\"\n        routerLinkActive=\"active\"\n        mat-button>\n        <mat-icon\n          class=\"sidenav__button\"\n          aria-hidden=\"false\"\n          aria-label=\"Bookmarks\">\n          bookmarks\n        </mat-icon>\n      </button>\n    </div>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"content mat-elevation-z8\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n<mat-toolbar class=\"toolbar footer\">\n  @copyright\n</mat-toolbar>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\nimport {NgxWebstorageModule} from 'ngx-webstorage';\n\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    NgxWebstorageModule.forRoot(),\n    MatIconModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatChipsModule,\n    MatToolbarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./containers/search/search.module').then(m => m.SearchModule)\n  }, {\n    path: 'bookmarks',\n    loadChildren: () => import('./containers/bookmarks/bookmarks.module').then(m => m.BookmarksModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}