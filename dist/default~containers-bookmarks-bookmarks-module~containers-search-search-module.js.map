{"version":3,"sources":["./src/app/components/elements.module.ts","./src/app/components/images-list/images-list.component.html","./src/app/components/images-list/images-list.component.ts","./src/app/rest/images.service.ts","./src/app/components/image-card/image-card.component.html","./src/app/components/image-card/image-card.component.ts"],"names":[],"mappings":"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","file":"default~containers-bookmarks-bookmarks-module~containers-search-search-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatChipsModule} from '@angular/material/chips';\n\nimport {ImagesListComponent} from './images-list/images-list.component';\nimport {ImageCardComponent} from './image-card/image-card.component';\n\n@NgModule({\n  declarations: [\n    ImageCardComponent,\n    ImagesListComponent\n  ],\n  exports: [\n    ImageCardComponent,\n    ImagesListComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatChipsModule,\n    FlexLayoutModule\n  ]\n})\nexport class ElementsModule {\n}\n","<div\n  class=\"image-list\"\n  fxLayout=\"row wrap\"\n  fxLayoutGap=\"grid\"\n  fxLayoutAlign=\"space-evenly start\">\n  <div\n    *ngFor=\"let image of images\"\n    fxFlex.xl=\"25%\"\n    fxFlex.lg=\"33%\"\n    fxFlex.md=\"50%\"\n    fxFlex.xs=\"100%\">\n    <app-image-card\n      [image]=\"image\"\n      [bookmarkIt]=\"!!bookmarkIt\">\n    </app-image-card>\n  </div>\n</div>\n","import {Component, Input} from '@angular/core';\n\nimport {ImageDto} from '../../rest/image.dto';\n\n@Component({\n  selector: 'app-images-list',\n  templateUrl: './images-list.component.html',\n  styleUrls: ['./images-list.component.scss']\n})\nexport class ImagesListComponent {\n  @Input() images: ImageDto[];\n  @Input() bookmarkIt: boolean;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {LocalStorageService} from 'ngx-webstorage';\n\nimport {ImageDto} from './image.dto';\nimport {ImagesResponseDto} from './images.response.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n  private apiKey = environment.apiKey;\n  private bookmarksArray: ImageDto[] = [];\n  public bookmarks = 'bookmarks';\n\n  constructor(\n    private http: HttpClient,\n    private storageService?: LocalStorageService) {\n  }\n\n  public saveBookmark(image: ImageDto): void {\n\n    this.storageService.store(this.bookmarks, this.bookmarksArray);\n    this.retrieveBookmarks();\n    if (this.bookmarksArray !== null && !this.bookmarksArray.find(existImage => existImage === image)) {\n      this.bookmarksArray.push(image);\n      this.storageService.store(this.bookmarks, this.bookmarksArray);\n    }\n  }\n\n  public removeBookmark(image: ImageDto): void {\n    this.retrieveBookmarks();\n    this.storageService.store(this.bookmarks, this.bookmarksArray.filter(bookmark => bookmark !== image));\n  }\n\n  retrieveBookmarks(): ImageDto[] {\n    return this.bookmarksArray = this.storageService.retrieve(this.bookmarks);\n  }\n\n  public searchImages(searchTerm: string, page = 1, perpage = 20): Observable<ImagesResponseDto> {\n    return this.http\n      .get<ImagesResponseDto>('https://www.flickr.com/services/rest/', {\n        params: {\n          tags: searchTerm,\n          method: 'flickr.photos.search',\n          format: 'json',\n          nojsoncallback: '1',\n          media: 'photos',\n          per_page: perpage.toString(),\n          page: page.toString(),\n          extras: 'tags, url_w',\n          api_key: this.apiKey,\n        },\n      })\n      .pipe(map(response => response.photos));\n  }\n}\n","<mat-card>\n  <img\n    class=\"image\"\n    src=\"{{image.url_w}}\"\n    alt=\"{{image.title}}\">\n  <mat-card-actions>\n    <button\n      *ngIf=\"bookmarkIt\"\n      (click)=\"onAddBookmark()\"\n      mat-raised-button>\n      Bookmark it!\n    </button>\n    <button\n      *ngIf=\"!bookmarkIt\"\n      (click)=\"onRemoveBookmark()\"\n      mat-raised-button>\n      Remove Bookmark\n    </button>\n  </mat-card-actions>\n  <mat-card-content>\n    <mat-chip-list aria-label=\"Tags\">\n      <mat-chip\n        *ngFor=\"let tag of tags\"\n        class=\"tag\"\n        disabled>\n        {{tag}}\n      </mat-chip>\n    </mat-chip-list>\n  </mat-card-content>\n</mat-card>\n","import {Component, Input, OnInit} from '@angular/core';\n\nimport {ImagesService} from '../../rest/images.service';\nimport {ImageDto} from '../../rest/image.dto';\n\n@Component({\n  selector: 'app-image-card',\n  templateUrl: './image-card.component.html',\n  styleUrls: ['./image-card.component.scss']\n})\nexport class ImageCardComponent implements OnInit {\n  @Input() image: ImageDto;\n  @Input() bookmarkIt: boolean;\n  public tags: string[];\n\n  constructor(private imagesService: ImagesService) {\n  }\n\n  ngOnInit(): void {\n    this.tags = this.image.tags\n      .split(' ')\n      .filter(tag => tag.length < 7)\n      .splice(0, 4);\n  }\n\n  public onAddBookmark(): void {\n    this.imagesService.saveBookmark(this.image);\n  }\n\n  public onRemoveBookmark(): void {\n    this.imagesService.removeBookmark(this.image);\n  }\n}\n"],"sourceRoot":"webpack:///"}